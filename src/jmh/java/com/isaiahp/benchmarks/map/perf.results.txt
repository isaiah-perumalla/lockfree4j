# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.75, shortString = true)

# Run progress: 0.00% complete, ETA 00:03:20
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
34.631 ns/op
# Warmup Iteration   2: 34.302 ns/op
# Warmup Iteration   3: 31.540 ns/op
# Warmup Iteration   4: 31.498 ns/op
# Warmup Iteration   5: 31.574 ns/op
Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
31.582 ns/op
Iteration   2: 31.483 ns/op
Iteration   3: 31.599 ns/op
Iteration   4: 31.577 ns/op
Iteration   5: 31.514 ns/op
                 ·async: (text only)

# Processing profiler results: AsyncProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  31.551 ±(99.9%) 0.192 ns/op [Average]
  (min, avg, max) = (31.483, 31.551, 31.599), stdev = 0.050
  CI (99.9%): [31.359, 31.743] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·async":
Async profiler results:
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.75-shortString-true/flame-cpu-forward.html
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.75-shortString-true/flame-cpu-reverse.html


# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.75, shortString = false)

# Run progress: 25.00% complete, ETA 00:02:33
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
62.412 ns/op
# Warmup Iteration   2: 62.838 ns/op
# Warmup Iteration   3: 56.914 ns/op
# Warmup Iteration   4: 56.925 ns/op
# Warmup Iteration   5: 57.096 ns/op
Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
56.781 ns/op
Iteration   2: 56.865 ns/op
Iteration   3: 56.978 ns/op
Iteration   4: 57.692 ns/op
Iteration   5: 56.842 ns/op
                 ·async: (text only)

# Processing profiler results: AsyncProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  57.032 ±(99.9%) 1.447 ns/op [Average]
  (min, avg, max) = (56.781, 57.032, 57.692), stdev = 0.376
  CI (99.9%): [55.585, 58.479] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·async":
Async profiler results:
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.75-shortString-false/flame-cpu-forward.html
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.75-shortString-false/flame-cpu-reverse.html


# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.9, shortString = true)

# Run progress: 50.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
33.850 ns/op
# Warmup Iteration   2: 33.383 ns/op
# Warmup Iteration   3: 31.466 ns/op
# Warmup Iteration   4: 31.219 ns/op
# Warmup Iteration   5: 31.175 ns/op
Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
31.356 ns/op
Iteration   2: 31.287 ns/op
Iteration   3: 31.201 ns/op
Iteration   4: 31.338 ns/op
Iteration   5: 31.222 ns/op
                 ·async: (text only)

# Processing profiler results: AsyncProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  31.281 ±(99.9%) 0.264 ns/op [Average]
  (min, avg, max) = (31.201, 31.281, 31.356), stdev = 0.069
  CI (99.9%): [31.017, 31.545] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·async":
Async profiler results:
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.9-shortString-true/flame-cpu-forward.html
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.9-shortString-true/flame-cpu-reverse.html


# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.9, shortString = false)

# Run progress: 75.00% complete, ETA 00:00:51
# Fork: 1 of 1
# Preparing profilers: AsyncProfiler
# Warmup Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
63.632 ns/op
# Warmup Iteration   2: 62.273 ns/op
# Warmup Iteration   3: 57.172 ns/op
# Warmup Iteration   4: 57.004 ns/op
# Warmup Iteration   5: 57.724 ns/op
Iteration   1: [WARN] Kernel symbols are unavailable due to restrictions. Try
  sysctl kernel.perf_event_paranoid=1
  sysctl kernel.kptr_restrict=0
57.081 ns/op
Iteration   2: 56.957 ns/op
Iteration   3: 57.618 ns/op
Iteration   4: 68.753 ns/op
Iteration   5: 61.072 ns/op
                 ·async: (text only)

# Processing profiler results: AsyncProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  60.296 ±(99.9%) 19.328 ns/op [Average]
  (min, avg, max) = (56.957, 60.296, 68.753), stdev = 5.019
  CI (99.9%): [40.968, 79.624] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·async":
Async profiler results:
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.9-shortString-false/flame-cpu-forward.html
  ./prof-results/com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap-AverageTime-loadFactor-0.9-shortString-false/flame-cpu-reverse.html


# Run complete. Total time: 00:03:25

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                       (loadFactor)  (shortString)  Mode  Cnt   Score    Error  Units
AsciiMapBench.agronaMap                 0.75           true  avgt    5  31.551 ±  0.192  ns/op
AsciiMapBench.agronaMap:·async          0.75           true  avgt          NaN             ---
AsciiMapBench.agronaMap                 0.75          false  avgt    5  57.032 ±  1.447  ns/op
AsciiMapBench.agronaMap:·async          0.75          false  avgt          NaN             ---
AsciiMapBench.agronaMap                  0.9           true  avgt    5  31.281 ±  0.264  ns/op
AsciiMapBench.agronaMap:·async           0.9           true  avgt          NaN             ---
AsciiMapBench.agronaMap                  0.9          false  avgt    5  60.296 ± 19.328  ns/op
AsciiMapBench.agronaMap:·async           0.9          false  avgt          NaN             ---
08:09:27 isaiahp@isaiahp-XPS seqlock4j ±|shm_map ✗|→ /opt/jdks/zulu17/bin/java -jar  build/libs/benchmarks.jar f2 wi2 i3 AsciiMapBench.ag -prof perf
# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.75, shortString = true)

# Run progress: 0.00% complete, ETA 00:03:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 34.453 ns/op
# Warmup Iteration   2: 34.388 ns/op
# Warmup Iteration   3: 31.928 ns/op
# Warmup Iteration   4: 31.917 ns/op
# Warmup Iteration   5: 31.794 ns/op
Iteration   1: 31.896 ns/op
Iteration   2: 31.871 ns/op
Iteration   3: 31.753 ns/op
Iteration   4: 31.957 ns/op
Iteration   5: 31.812 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  31.858 ±(99.9%) 0.302 ns/op [Average]
  (min, avg, max) = (31.753, 31.858, 31.957), stdev = 0.078
  CI (99.9%): [31.556, 32.160] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·perf":
Perf stats:
--------------------------------------------------

         24,776.49 msec task-clock                       #    1.001 CPUs utilized
               933      context-switches                 #   37.657 /sec
                79      cpu-migrations                   #    3.189 /sec
               199      page-faults                      #    8.032 /sec
    75,391,630,157      cycles                           #    3.043 GHz                         (28.62%)
    16,564,291,011      stalled-cycles-frontend          #   21.97% frontend cycles idle        (28.67%)
   259,493,095,177      instructions                     #    3.44  insn per cycle
                                                  #    0.06  stalled cycles per insn     (35.86%)
    45,579,449,028      branches                         #    1.840 G/sec                       (35.86%)
         1,767,542      branch-misses                    #    0.00% of all branches             (35.88%)
    62,170,257,550      L1-dcache-loads                  #    2.509 G/sec                       (28.50%)
         3,359,332      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (14.31%)
         1,493,257      LLC-loads                        #   60.269 K/sec                       (14.30%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         5,357,940      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.46%)
    62,157,104,654      dTLB-loads                       #    2.509 G/sec                       (21.39%)
           206,952      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.29%)
           163,961      iTLB-loads                       #    6.618 K/sec                       (14.31%)
            73,305      iTLB-load-misses                 #   44.71% of all iTLB cache accesses  (21.45%)
   <not supported>      L1-dcache-prefetches
           148,732      L1-dcache-prefetch-misses        #    6.003 K/sec                       (28.58%)

      24.739546331 seconds time elapsed

      51.415926000 seconds user
       0.124396000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.75, shortString = false)

# Run progress: 25.00% complete, ETA 00:02:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 62.333 ns/op
# Warmup Iteration   2: 62.975 ns/op
# Warmup Iteration   3: 57.980 ns/op
# Warmup Iteration   4: 57.836 ns/op
# Warmup Iteration   5: 58.247 ns/op
Iteration   1: ^C08:16:16 isaiahp@isaiahp-XPS seqlock4j ±|shm_map ✗|→ /opt/jdks/zulu17/bin/java -jar  build/libs/benchmarks.jar f2 wi2 i3 AsciiMapBench.asciiMapO -prof perf
# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap
# Parameters: (loadFactor = 0.75, shortString = true)

# Run progress: 0.00% complete, ETA 00:03:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 38.258 ns/op
# Warmup Iteration   2: 39.930 ns/op
# Warmup Iteration   3: 38.336 ns/op
# Warmup Iteration   4: 38.326 ns/op
# Warmup Iteration   5: 38.274 ns/op
Iteration   1: 38.287 ns/op
Iteration   2: 38.418 ns/op
Iteration   3: 38.341 ns/op
Iteration   4: 38.397 ns/op
Iteration   5: 38.442 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap":
  38.377 ±(99.9%) 0.241 ns/op [Average]
  (min, avg, max) = (38.287, 38.377, 38.442), stdev = 0.063
  CI (99.9%): [38.136, 38.618] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,767.04 msec task-clock                       #    1.001 CPUs utilized
               961      context-switches                 #   38.802 /sec
                77      cpu-migrations                   #    3.109 /sec
               181      page-faults                      #    7.308 /sec
    75,320,474,232      cycles                           #    3.041 GHz                         (28.64%)
    18,133,437,511      stalled-cycles-frontend          #   24.08% frontend cycles idle        (28.67%)
   245,497,058,551      instructions                     #    3.26  insn per cycle
                                                  #    0.07  stalled cycles per insn     (35.82%)
    32,711,659,486      branches                         #    1.321 G/sec                       (35.84%)
         1,640,919      branch-misses                    #    0.01% of all branches             (35.86%)
    52,228,637,363      L1-dcache-loads                  #    2.109 G/sec                       (28.52%)
         3,121,860      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (14.32%)
         1,399,934      LLC-loads                        #   56.524 K/sec                       (14.30%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         5,117,922      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.46%)
    52,237,593,695      dTLB-loads                       #    2.109 G/sec                       (19.95%)
           173,700      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (15.73%)
            44,551      iTLB-loads                       #    1.799 K/sec                       (14.30%)
            56,178      iTLB-load-misses                 #  126.10% of all iTLB cache accesses  (21.44%)
   <not supported>      L1-dcache-prefetches
           121,952      L1-dcache-prefetch-misses        #    4.924 K/sec                       (28.57%)

      24.734202643 seconds time elapsed

      51.544642000 seconds user
       0.183253000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap
# Parameters: (loadFactor = 0.75, shortString = false)

# Run progress: 25.00% complete, ETA 00:02:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 89.470 ns/op
# Warmup Iteration   2: 89.460 ns/op
# Warmup Iteration   3: 88.278 ns/op
# Warmup Iteration   4: 88.868 ns/op
# Warmup Iteration   5: 88.469 ns/op
Iteration   1: 87.995 ns/op
Iteration   2: 89.328 ns/op
Iteration   3: ^C08:17:57 isaiahp@isaiahp-XPS seqlock4j ±|shm_map ✗|→ /opt/jdks/zulu17/bin/java -jar  build/libs/benchmarks.jar f2 wi2 i3 AsciiMapBench.ag -prof perf
# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.75, shortString = true)

# Run progress: 0.00% complete, ETA 00:03:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 33.524 ns/op
# Warmup Iteration   2: 33.608 ns/op
# Warmup Iteration   3: 31.602 ns/op
# Warmup Iteration   4: 31.554 ns/op
# Warmup Iteration   5: 31.584 ns/op
Iteration   1: 31.628 ns/op
Iteration   2: 31.656 ns/op
Iteration   3: 31.600 ns/op
Iteration   4: 31.791 ns/op
Iteration   5: 31.736 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  31.682 ±(99.9%) 0.305 ns/op [Average]
  (min, avg, max) = (31.600, 31.682, 31.791), stdev = 0.079
  CI (99.9%): [31.377, 31.988] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·perf":
Perf stats:
--------------------------------------------------

         24,835.24 msec task-clock                       #    1.001 CPUs utilized
               919      context-switches                 #   37.004 /sec
                58      cpu-migrations                   #    2.335 /sec
               183      page-faults                      #    7.369 /sec
    75,628,883,409      cycles                           #    3.045 GHz                         (28.51%)
    16,151,240,767      stalled-cycles-frontend          #   21.36% frontend cycles idle        (28.61%)
   262,105,841,262      instructions                     #    3.47  insn per cycle
                                                  #    0.06  stalled cycles per insn     (35.86%)
    46,670,041,629      branches                         #    1.879 G/sec                       (35.90%)
         1,987,984      branch-misses                    #    0.00% of all branches             (35.94%)
    62,559,721,576      L1-dcache-loads                  #    2.519 G/sec                       (28.56%)
         1,814,906      L1-dcache-load-misses            #    0.00% of all L1-dcache accesses   (14.31%)
           701,149      LLC-loads                        #   28.232 K/sec                       (14.31%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         3,885,362      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.45%)
    62,533,885,897      dTLB-loads                       #    2.518 G/sec                       (21.42%)
           494,054      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.33%)
           243,631      iTLB-loads                       #    9.810 K/sec                       (14.29%)
           124,907      iTLB-load-misses                 #   51.27% of all iTLB cache accesses  (21.39%)
   <not supported>      L1-dcache-prefetches
           182,579      L1-dcache-prefetch-misses        #    7.352 K/sec                       (28.50%)

      24.800400920 seconds time elapsed

      51.524789000 seconds user
       0.169638000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.75, shortString = false)

# Run progress: 25.00% complete, ETA 00:02:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 67.568 ns/op
# Warmup Iteration   2: 67.397 ns/op
# Warmup Iteration   3: 63.115 ns/op
# Warmup Iteration   4: 63.471 ns/op
# Warmup Iteration   5: 64.004 ns/op
Iteration   1: 63.441 ns/op
Iteration   2: 63.474 ns/op
Iteration   3: 63.717 ns/op
Iteration   4: 64.852 ns/op
Iteration   5: 63.897 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  63.876 ±(99.9%) 2.220 ns/op [Average]
  (min, avg, max) = (63.441, 63.876, 64.852), stdev = 0.577
  CI (99.9%): [61.656, 66.097] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·perf":
Perf stats:
--------------------------------------------------

         24,769.41 msec task-clock                       #    1.002 CPUs utilized
               976      context-switches                 #   39.403 /sec
                82      cpu-migrations                   #    3.311 /sec
               185      page-faults                      #    7.469 /sec
    75,090,620,042      cycles                           #    3.032 GHz                         (28.58%)
    21,161,097,076      stalled-cycles-frontend          #   28.18% frontend cycles idle        (28.67%)
   254,254,697,407      instructions                     #    3.39  insn per cycle
                                                  #    0.08  stalled cycles per insn     (35.89%)
    44,303,657,862      branches                         #    1.789 G/sec                       (35.92%)
         2,204,155      branch-misses                    #    0.00% of all branches             (35.95%)
    68,076,101,903      L1-dcache-loads                  #    2.748 G/sec                       (28.55%)
         4,164,462      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (14.31%)
         1,914,357      LLC-loads                        #   77.287 K/sec                       (14.30%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         6,014,941      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.43%)
    68,094,986,496      dTLB-loads                       #    2.749 G/sec                       (21.40%)
           239,673      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.27%)
           182,893      iTLB-loads                       #    7.384 K/sec                       (14.29%)
           119,915      iTLB-load-misses                 #   65.57% of all iTLB cache accesses  (21.41%)
   <not supported>      L1-dcache-prefetches
           207,162      L1-dcache-prefetch-misses        #    8.364 K/sec                       (28.54%)

      24.729765650 seconds time elapsed

      51.478079000 seconds user
       0.132496000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.9, shortString = true)

# Run progress: 50.00% complete, ETA 00:01:41
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 34.836 ns/op
# Warmup Iteration   2: 33.410 ns/op
# Warmup Iteration   3: 31.498 ns/op
# Warmup Iteration   4: 31.374 ns/op
# Warmup Iteration   5: 31.456 ns/op
Iteration   1: 31.448 ns/op
Iteration   2: 31.533 ns/op
Iteration   3: 31.419 ns/op
Iteration   4: 31.464 ns/op
Iteration   5: 31.480 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  31.469 ±(99.9%) 0.163 ns/op [Average]
  (min, avg, max) = (31.419, 31.469, 31.533), stdev = 0.042
  CI (99.9%): [31.306, 31.632] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·perf":
Perf stats:
--------------------------------------------------

         24,764.58 msec task-clock                       #    1.002 CPUs utilized
               980      context-switches                 #   39.573 /sec
                74      cpu-migrations                   #    2.988 /sec
               151      page-faults                      #    6.097 /sec
    75,354,266,316      cycles                           #    3.043 GHz                         (28.65%)
    15,805,469,592      stalled-cycles-frontend          #   20.97% frontend cycles idle        (28.71%)
   261,865,433,048      instructions                     #    3.48  insn per cycle
                                                  #    0.06  stalled cycles per insn     (35.87%)
    45,337,231,404      branches                         #    1.831 G/sec                       (35.88%)
         2,092,175      branch-misses                    #    0.00% of all branches             (35.89%)
    62,990,791,254      L1-dcache-loads                  #    2.544 G/sec                       (28.45%)
         1,803,658      L1-dcache-load-misses            #    0.00% of all L1-dcache accesses   (14.31%)
           604,681      LLC-loads                        #   24.417 K/sec                       (14.31%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         3,605,140      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.46%)
    62,730,722,608      dTLB-loads                       #    2.533 G/sec                       (21.43%)
           253,419      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.32%)
           134,734      iTLB-loads                       #    5.441 K/sec                       (14.31%)
            82,053      iTLB-load-misses                 #   60.90% of all iTLB cache accesses  (21.45%)
   <not supported>      L1-dcache-prefetches
           134,532      L1-dcache-prefetch-misses        #    5.432 K/sec                       (28.59%)

      24.727377682 seconds time elapsed

      51.688314000 seconds user
       0.193548000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap
# Parameters: (loadFactor = 0.9, shortString = false)

# Run progress: 75.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 63.990 ns/op
# Warmup Iteration   2: 62.739 ns/op
# Warmup Iteration   3: 58.175 ns/op
# Warmup Iteration   4: 58.146 ns/op
# Warmup Iteration   5: 57.892 ns/op
Iteration   1: 58.222 ns/op
Iteration   2: 58.018 ns/op
Iteration   3: 57.871 ns/op
Iteration   4: 58.064 ns/op
Iteration   5: 57.913 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap":
  58.018 ±(99.9%) 0.533 ns/op [Average]
  (min, avg, max) = (57.871, 58.018, 58.222), stdev = 0.138
  CI (99.9%): [57.485, 58.550] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.agronaMap:·perf":
Perf stats:
--------------------------------------------------

         24,781.41 msec task-clock                       #    1.002 CPUs utilized
               936      context-switches                 #   37.770 /sec
                64      cpu-migrations                   #    2.583 /sec
               161      page-faults                      #    6.497 /sec
    75,280,858,563      cycles                           #    3.038 GHz                         (28.63%)
    16,559,491,818      stalled-cycles-frontend          #   22.00% frontend cycles idle        (28.67%)
   278,167,454,419      instructions                     #    3.70  insn per cycle
                                                  #    0.06  stalled cycles per insn     (35.85%)
    48,383,354,751      branches                         #    1.952 G/sec                       (35.88%)
         2,202,750      branch-misses                    #    0.00% of all branches             (35.89%)
    75,051,865,867      L1-dcache-loads                  #    3.029 G/sec                       (28.51%)
         4,955,266      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (14.32%)
         1,447,925      LLC-loads                        #   58.428 K/sec                       (14.30%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         4,582,725      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.43%)
    75,012,905,358      dTLB-loads                       #    3.027 G/sec                       (21.37%)
           183,133      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.30%)
           114,302      iTLB-loads                       #    4.612 K/sec                       (14.30%)
            66,827      iTLB-load-misses                 #   58.47% of all iTLB cache accesses  (21.44%)
   <not supported>      L1-dcache-prefetches
           134,921      L1-dcache-prefetch-misses        #    5.444 K/sec                       (28.58%)

      24.742721846 seconds time elapsed

      51.696630000 seconds user
       0.183781000 seconds sys




# Run complete. Total time: 00:03:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                      (loadFactor)  (shortString)  Mode  Cnt   Score   Error      Units
AsciiMapBench.agronaMap                0.75           true  avgt    5  31.682 ± 0.305      ns/op
AsciiMapBench.agronaMap:·cpi           0.75           true  avgt        0.289          clks/insn
AsciiMapBench.agronaMap:·ipc           0.75           true  avgt        3.466          insns/clk
AsciiMapBench.agronaMap:·perf          0.75           true  avgt          NaN                ---
AsciiMapBench.agronaMap                0.75          false  avgt    5  63.876 ± 2.220      ns/op
AsciiMapBench.agronaMap:·cpi           0.75          false  avgt        0.295          clks/insn
AsciiMapBench.agronaMap:·ipc           0.75          false  avgt        3.386          insns/clk
AsciiMapBench.agronaMap:·perf          0.75          false  avgt          NaN                ---
AsciiMapBench.agronaMap                 0.9           true  avgt    5  31.469 ± 0.163      ns/op
AsciiMapBench.agronaMap:·cpi            0.9           true  avgt        0.288          clks/insn
AsciiMapBench.agronaMap:·ipc            0.9           true  avgt        3.475          insns/clk
AsciiMapBench.agronaMap:·perf           0.9           true  avgt          NaN                ---
AsciiMapBench.agronaMap                 0.9          false  avgt    5  58.018 ± 0.533      ns/op
AsciiMapBench.agronaMap:·cpi            0.9          false  avgt        0.271          clks/insn
AsciiMapBench.agronaMap:·ipc            0.9          false  avgt        3.695          insns/clk
AsciiMapBench.agronaMap:·perf           0.9          false  avgt          NaN                ---
08:21:27 isaiahp@isaiahp-XPS seqlock4j ±|shm_map ✗|→



# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap
# Parameters: (loadFactor = 0.75, shortString = true)

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 40.358 ns/op
# Warmup Iteration   2: 40.201 ns/op
# Warmup Iteration   3: 41.028 ns/op
# Warmup Iteration   4: 43.394 ns/op
# Warmup Iteration   5: 40.913 ns/op
Iteration   1: 41.013 ns/op
Iteration   2: 41.079 ns/op
Iteration   3: 41.040 ns/op
Iteration   4: 41.084 ns/op
Iteration   5: 41.043 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap":
  41.052 ±(99.9%) 0.115 ns/op [Average]
  (min, avg, max) = (41.013, 41.052, 41.084), stdev = 0.030
  CI (99.9%): [40.937, 41.167] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,878.96 msec task-clock                       #    1.001 CPUs utilized
               970      context-switches                 #   38.989 /sec
                77      cpu-migrations                   #    3.095 /sec
               159      page-faults                      #    6.391 /sec
    75,731,013,187      cycles                           #    3.044 GHz                         (28.64%)
    16,516,698,773      stalled-cycles-frontend          #   21.81% frontend cycles idle        (28.68%)
   253,761,183,508      instructions                     #    3.35  insn per cycle
                                                  #    0.07  stalled cycles per insn     (35.85%)
    36,767,257,533      branches                         #    1.478 G/sec                       (35.86%)
         2,125,575      branch-misses                    #    0.01% of all branches             (35.88%)
    56,917,361,199      L1-dcache-loads                  #    2.288 G/sec                       (28.50%)
         3,659,739      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (14.32%)
         1,146,720      LLC-loads                        #   46.092 K/sec                       (14.32%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         4,670,679      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.46%)
    56,837,603,510      dTLB-loads                       #    2.285 G/sec                       (21.40%)
           164,762      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.30%)
           105,066      iTLB-loads                       #    4.223 K/sec                       (14.30%)
            70,132      iTLB-load-misses                 #   66.75% of all iTLB cache accesses  (21.44%)
   <not supported>      L1-dcache-prefetches
           145,529      L1-dcache-prefetch-misses        #    5.849 K/sec                       (28.57%)

      24.846125502 seconds time elapsed

      51.673761000 seconds user
       0.183647000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap
# Parameters: (loadFactor = 0.75, shortString = false)

# Run progress: 12.50% complete, ETA 00:05:56
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 104.995 ns/op
# Warmup Iteration   2: 104.673 ns/op
# Warmup Iteration   3: 107.628 ns/op
# Warmup Iteration   4: 107.862 ns/op
# Warmup Iteration   5: 107.817 ns/op
Iteration   1: 107.998 ns/op
Iteration   2: 107.794 ns/op
Iteration   3: 107.799 ns/op
Iteration   4: 108.167 ns/op
Iteration   5: 108.059 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap":
  107.963 ±(99.9%) 0.632 ns/op [Average]
  (min, avg, max) = (107.794, 107.963, 108.167), stdev = 0.164
  CI (99.9%): [107.332, 108.595] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,725.54 msec task-clock                       #    1.001 CPUs utilized
               978      context-switches                 #   39.554 /sec
                67      cpu-migrations                   #    2.710 /sec
               174      page-faults                      #    7.037 /sec
    75,099,062,775      cycles                           #    3.037 GHz                         (28.64%)
     5,605,972,992      stalled-cycles-frontend          #    7.46% frontend cycles idle        (28.71%)
   282,863,405,151      instructions                     #    3.77  insn per cycle
                                                  #    0.02  stalled cycles per insn     (35.87%)
    36,186,612,850      branches                         #    1.464 G/sec                       (35.88%)
         1,829,145      branch-misses                    #    0.01% of all branches             (35.89%)
    56,563,008,868      L1-dcache-loads                  #    2.288 G/sec                       (28.49%)
         1,603,755      L1-dcache-load-misses            #    0.00% of all L1-dcache accesses   (14.31%)
           611,094      LLC-loads                        #   24.715 K/sec                       (14.30%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         3,808,498      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.46%)
    56,311,793,513      dTLB-loads                       #    2.277 G/sec                       (21.41%)
           133,875      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.27%)
            86,448      iTLB-loads                       #    3.496 K/sec                       (14.30%)
            52,566      iTLB-load-misses                 #   60.81% of all iTLB cache accesses  (21.43%)
   <not supported>      L1-dcache-prefetches
           189,625      L1-dcache-prefetch-misses        #    7.669 K/sec                       (28.57%)

      24.691507138 seconds time elapsed

      51.504584000 seconds user
       0.156945000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap
# Parameters: (loadFactor = 0.9, shortString = true)

# Run progress: 25.00% complete, ETA 00:05:05
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 71.869 ns/op
# Warmup Iteration   2: 69.844 ns/op
# Warmup Iteration   3: 68.426 ns/op
# Warmup Iteration   4: 68.547 ns/op
# Warmup Iteration   5: 69.620 ns/op
Iteration   1: 68.700 ns/op
Iteration   2: 68.616 ns/op
Iteration   3: 68.831 ns/op
Iteration   4: 69.766 ns/op
Iteration   5: 68.644 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap":
  68.911 ±(99.9%) 1.867 ns/op [Average]
  (min, avg, max) = (68.616, 68.911, 69.766), stdev = 0.485
  CI (99.9%): [67.044, 70.779] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,772.76 msec task-clock                       #    1.002 CPUs utilized
               964      context-switches                 #   38.914 /sec
                86      cpu-migrations                   #    3.472 /sec
               175      page-faults                      #    7.064 /sec
    75,404,465,604      cycles                           #    3.044 GHz                         (28.61%)
     8,153,907,308      stalled-cycles-frontend          #   10.81% frontend cycles idle        (28.69%)
   282,134,846,021      instructions                     #    3.74  insn per cycle
                                                  #    0.03  stalled cycles per insn     (35.86%)
    53,518,755,829      branches                         #    2.160 G/sec                       (35.88%)
         2,178,463      branch-misses                    #    0.00% of all branches             (35.90%)
    68,559,486,601      L1-dcache-loads                  #    2.768 G/sec                       (28.50%)
         2,795,072      L1-dcache-load-misses            #    0.00% of all L1-dcache accesses   (14.27%)
           799,746      LLC-loads                        #   32.283 K/sec                       (14.29%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         3,907,849      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.45%)
    68,464,716,557      dTLB-loads                       #    2.764 G/sec                       (21.49%)
           190,565      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (20.08%)
            91,981      iTLB-loads                       #    3.713 K/sec                       (14.30%)
            58,363      iTLB-load-misses                 #   63.45% of all iTLB cache accesses  (21.44%)
   <not supported>      L1-dcache-prefetches
           188,591      L1-dcache-prefetch-misses        #    7.613 K/sec                       (28.57%)

      24.735553962 seconds time elapsed

      51.732513000 seconds user
       0.222391000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap
# Parameters: (loadFactor = 0.9, shortString = false)

# Run progress: 37.50% complete, ETA 00:04:14
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 248.543 ns/op
# Warmup Iteration   2: 247.907 ns/op
# Warmup Iteration   3: 257.079 ns/op
# Warmup Iteration   4: 257.196 ns/op
# Warmup Iteration   5: 255.106 ns/op
Iteration   1: 257.234 ns/op
Iteration   2: 254.275 ns/op
Iteration   3: 254.207 ns/op
Iteration   4: 255.406 ns/op
Iteration   5: 254.395 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap":
  255.104 ±(99.9%) 4.955 ns/op [Average]
  (min, avg, max) = (254.207, 255.104, 257.234), stdev = 1.287
  CI (99.9%): [250.149, 260.059] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,779.07 msec task-clock                       #    1.002 CPUs utilized
               987      context-switches                 #   39.832 /sec
                63      cpu-migrations                   #    2.542 /sec
               194      page-faults                      #    7.829 /sec
    75,250,269,517      cycles                           #    3.037 GHz                         (28.63%)
     3,782,978,727      stalled-cycles-frontend          #    5.03% frontend cycles idle        (28.69%)
   265,774,859,227      instructions                     #    3.53  insn per cycle
                                                  #    0.01  stalled cycles per insn     (35.86%)
    32,298,860,739      branches                         #    1.303 G/sec                       (35.89%)
         2,483,936      branch-misses                    #    0.01% of all branches             (35.91%)
    47,985,383,960      L1-dcache-loads                  #    1.937 G/sec                       (28.49%)
         2,536,613      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (14.30%)
         1,218,517      LLC-loads                        #   49.175 K/sec                       (14.33%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         3,967,937      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.49%)
    47,888,982,489      dTLB-loads                       #    1.933 G/sec                       (21.41%)
           168,695      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.28%)
            51,531      iTLB-loads                       #    2.080 K/sec                       (14.30%)
            56,747      iTLB-load-misses                 #  110.12% of all iTLB cache accesses  (21.44%)
   <not supported>      L1-dcache-prefetches
           247,588      L1-dcache-prefetch-misses        #    9.992 K/sec                       (28.57%)

      24.739939048 seconds time elapsed

      51.813530000 seconds user
       0.194068000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap
# Parameters: (loadFactor = 0.75, shortString = true)

# Run progress: 50.00% complete, ETA 00:03:23
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 37.124 ns/op
# Warmup Iteration   2: 37.113 ns/op
# Warmup Iteration   3: 36.430 ns/op
# Warmup Iteration   4: 36.363 ns/op
# Warmup Iteration   5: 36.363 ns/op
Iteration   1: 36.371 ns/op
Iteration   2: 36.455 ns/op
Iteration   3: 36.555 ns/op
Iteration   4: 36.518 ns/op
Iteration   5: 36.367 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap":
  36.453 ±(99.9%) 0.327 ns/op [Average]
  (min, avg, max) = (36.367, 36.453, 36.555), stdev = 0.085
  CI (99.9%): [36.127, 36.780] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,743.41 msec task-clock                       #    1.002 CPUs utilized
               942      context-switches                 #   38.071 /sec
                68      cpu-migrations                   #    2.748 /sec
               284      page-faults                      #   11.478 /sec
    75,202,081,965      cycles                           #    3.039 GHz                         (28.64%)
    16,158,394,961      stalled-cycles-frontend          #   21.49% frontend cycles idle        (28.73%)
   254,611,510,826      instructions                     #    3.39  insn per cycle
                                                  #    0.06  stalled cycles per insn     (35.89%)
    32,352,840,242      branches                         #    1.308 G/sec                       (35.90%)
         2,309,125      branch-misses                    #    0.01% of all branches             (35.94%)
    56,963,688,041      L1-dcache-loads                  #    2.302 G/sec                       (28.52%)
         3,038,600      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (14.30%)
         1,320,699      LLC-loads                        #   53.376 K/sec                       (14.30%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         4,229,465      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.43%)
    56,964,665,149      dTLB-loads                       #    2.302 G/sec                       (21.36%)
           148,162      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.28%)
            49,717      iTLB-loads                       #    2.009 K/sec                       (14.30%)
            67,774      iTLB-load-misses                 #  136.32% of all iTLB cache accesses  (21.45%)
   <not supported>      L1-dcache-prefetches
           146,294      L1-dcache-prefetch-misses        #    5.912 K/sec                       (28.59%)

      24.705332825 seconds time elapsed

      51.579646000 seconds user
       0.147331000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap
# Parameters: (loadFactor = 0.75, shortString = false)

# Run progress: 62.50% complete, ETA 00:02:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 93.159 ns/op
# Warmup Iteration   2: 90.285 ns/op
# Warmup Iteration   3: 92.130 ns/op
# Warmup Iteration   4: 92.107 ns/op
# Warmup Iteration   5: 92.486 ns/op
Iteration   1: 92.596 ns/op
Iteration   2: 92.367 ns/op
Iteration   3: 92.321 ns/op
Iteration   4: 92.641 ns/op
Iteration   5: 93.840 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap":
  92.753 ±(99.9%) 2.400 ns/op [Average]
  (min, avg, max) = (92.321, 92.753, 93.840), stdev = 0.623
  CI (99.9%): [90.353, 95.153] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,732.68 msec task-clock                       #    1.002 CPUs utilized
             1,117      context-switches                 #   45.163 /sec
                67      cpu-migrations                   #    2.709 /sec
               165      page-faults                      #    6.671 /sec
    74,997,653,976      cycles                           #    3.032 GHz                         (28.65%)
     8,114,020,983      stalled-cycles-frontend          #   10.82% frontend cycles idle        (28.71%)
   269,506,641,655      instructions                     #    3.59  insn per cycle
                                                  #    0.03  stalled cycles per insn     (35.87%)
    33,633,817,287      branches                         #    1.360 G/sec                       (35.87%)
         2,213,981      branch-misses                    #    0.01% of all branches             (35.88%)
    55,586,603,415      L1-dcache-loads                  #    2.247 G/sec                       (22.73%)
         2,382,839      L1-dcache-load-misses            #    0.00% of all L1-dcache accesses   (17.20%)
           701,121      LLC-loads                        #   28.348 K/sec                       (14.31%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         3,881,365      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.46%)
    55,657,234,279      dTLB-loads                       #    2.250 G/sec                       (21.41%)
           179,684      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.27%)
           104,248      iTLB-loads                       #    4.215 K/sec                       (14.27%)
            59,595      iTLB-load-misses                 #   57.17% of all iTLB cache accesses  (21.44%)
   <not supported>      L1-dcache-prefetches
           167,632      L1-dcache-prefetch-misses        #    6.778 K/sec                       (28.58%)

      24.693642142 seconds time elapsed

      51.509957000 seconds user
       0.181886000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap
# Parameters: (loadFactor = 0.9, shortString = true)

# Run progress: 75.00% complete, ETA 00:01:41
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 74.088 ns/op
# Warmup Iteration   2: 72.447 ns/op
# Warmup Iteration   3: 71.811 ns/op
# Warmup Iteration   4: 73.651 ns/op
# Warmup Iteration   5: 72.369 ns/op
Iteration   1: 76.794 ns/op
Iteration   2: 73.518 ns/op
Iteration   3: 73.619 ns/op
Iteration   4: 74.180 ns/op
Iteration   5: 72.257 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap":
  74.074 ±(99.9%) 6.450 ns/op [Average]
  (min, avg, max) = (72.257, 74.074, 76.794), stdev = 1.675
  CI (99.9%): [67.624, 80.524] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,771.64 msec task-clock                       #    1.002 CPUs utilized
               998      context-switches                 #   40.288 /sec
                88      cpu-migrations                   #    3.552 /sec
               183      page-faults                      #    7.387 /sec
    74,799,967,916      cycles                           #    3.020 GHz                         (28.64%)
    21,570,799,241      stalled-cycles-frontend          #   28.84% frontend cycles idle        (28.71%)
   234,417,304,142      instructions                     #    3.13  insn per cycle
                                                  #    0.09  stalled cycles per insn     (35.87%)
    36,589,799,623      branches                         #    1.477 G/sec                       (35.88%)
         2,667,022      branch-misses                    #    0.01% of all branches             (35.89%)
    51,852,909,653      L1-dcache-loads                  #    2.093 G/sec                       (32.81%)
         3,716,298      L1-dcache-load-misses            #    0.01% of all L1-dcache accesses   (27.28%)
         1,413,909      LLC-loads                        #   57.078 K/sec                       (22.95%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         5,863,996      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (25.81%)
    51,646,980,530      dTLB-loads                       #    2.085 G/sec                       (21.42%)
           317,021      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.30%)
           131,956      iTLB-loads                       #    5.327 K/sec                       (14.30%)
           107,830      iTLB-load-misses                 #   81.72% of all iTLB cache accesses  (21.45%)
   <not supported>      L1-dcache-prefetches
           244,430      L1-dcache-prefetch-misses        #    9.867 K/sec                       (28.58%)

      24.734163291 seconds time elapsed

      51.575806000 seconds user
       0.244247000 seconds sys




# JMH version: 1.35
# VM version: JDK 17.0.9, OpenJDK 64-Bit Server VM, 17.0.9+8-LTS
# VM invoker: /opt/jdks/zulu17/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 5000 ms each
# Measurement: 5 iterations, 5000 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap
# Parameters: (loadFactor = 0.9, shortString = false)

# Run progress: 87.50% complete, ETA 00:00:50
# Fork: 1 of 1
# Preparing profilers: LinuxPerfProfiler
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 138.165 ns/op
# Warmup Iteration   2: 135.401 ns/op
# Warmup Iteration   3: 137.187 ns/op
# Warmup Iteration   4: 138.043 ns/op
# Warmup Iteration   5: 134.320 ns/op
Iteration   1: 135.360 ns/op
Iteration   2: 137.320 ns/op
Iteration   3: 133.323 ns/op
Iteration   4: 132.996 ns/op
Iteration   5: 133.817 ns/op
# Processing profiler results: LinuxPerfProfiler


Result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap":
  134.563 ±(99.9%) 6.884 ns/op [Average]
  (min, avg, max) = (132.996, 134.563, 137.320), stdev = 1.788
  CI (99.9%): [127.680, 141.447] (assumes normal distribution)

Secondary result "com.isaiahp.benchmarks.map.AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf":
Perf stats:
--------------------------------------------------

         24,780.22 msec task-clock                       #    1.002 CPUs utilized
               954      context-switches                 #   38.498 /sec
               127      cpu-migrations                   #    5.125 /sec
               185      page-faults                      #    7.466 /sec
    75,121,779,487      cycles                           #    3.032 GHz                         (28.64%)
    15,075,177,947      stalled-cycles-frontend          #   20.07% frontend cycles idle        (28.66%)
   266,746,061,431      instructions                     #    3.55  insn per cycle
                                                  #    0.06  stalled cycles per insn     (35.89%)
    34,576,911,182      branches                         #    1.395 G/sec                       (35.89%)
         1,973,457      branch-misses                    #    0.01% of all branches             (35.93%)
    49,947,682,808      L1-dcache-loads                  #    2.016 G/sec                       (28.50%)
         2,262,076      L1-dcache-load-misses            #    0.00% of all L1-dcache accesses   (14.32%)
           999,395      LLC-loads                        #   40.330 K/sec                       (14.32%)
   <not supported>      LLC-load-misses
   <not supported>      L1-icache-loads
         4,733,418      L1-icache-load-misses            #    0.00% of all L1-icache accesses   (21.49%)
    49,910,653,117      dTLB-loads                       #    2.014 G/sec                       (21.43%)
           350,702      dTLB-load-misses                 #    0.00% of all dTLB cache accesses  (14.30%)
           216,802      iTLB-loads                       #    8.749 K/sec                       (14.29%)
           178,713      iTLB-load-misses                 #   82.43% of all iTLB cache accesses  (21.45%)
   <not supported>      L1-dcache-prefetches
           279,770      L1-dcache-prefetch-misses        #   11.290 K/sec                       (28.57%)

      24.736858544 seconds time elapsed

      51.617915000 seconds user
       0.209069000 seconds sys




# Run complete. Total time: 00:06:46

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                             (loadFactor)  (shortString)  Mode  Cnt    Score   Error      Units
AsciiMapBench.asciiMapBaseLineLayoutSearchMap                 0.75           true  avgt    5   41.052 ± 0.115      ns/op
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·cpi            0.75           true  avgt         0.298          clks/insn
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·ipc            0.75           true  avgt         3.351          insns/clk
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf           0.75           true  avgt           NaN                ---
AsciiMapBench.asciiMapBaseLineLayoutSearchMap                 0.75          false  avgt    5  107.963 ± 0.632      ns/op
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·cpi            0.75          false  avgt         0.265          clks/insn
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·ipc            0.75          false  avgt         3.767          insns/clk
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf           0.75          false  avgt           NaN                ---
AsciiMapBench.asciiMapBaseLineLayoutSearchMap                  0.9           true  avgt    5   68.911 ± 1.867      ns/op
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·cpi             0.9           true  avgt         0.267          clks/insn
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·ipc             0.9           true  avgt         3.742          insns/clk
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf            0.9           true  avgt           NaN                ---
AsciiMapBench.asciiMapBaseLineLayoutSearchMap                  0.9          false  avgt    5  255.104 ± 4.955      ns/op
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·cpi             0.9          false  avgt         0.283          clks/insn
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·ipc             0.9          false  avgt         3.532          insns/clk
AsciiMapBench.asciiMapBaseLineLayoutSearchMap:·perf            0.9          false  avgt           NaN                ---
AsciiMapBench.asciiMapOptimizedLayoutSearchMap                0.75           true  avgt    5   36.453 ± 0.327      ns/op
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·cpi           0.75           true  avgt         0.295          clks/insn
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·ipc           0.75           true  avgt         3.386          insns/clk
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf          0.75           true  avgt           NaN                ---
AsciiMapBench.asciiMapOptimizedLayoutSearchMap                0.75          false  avgt    5   92.753 ± 2.400      ns/op
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·cpi           0.75          false  avgt         0.278          clks/insn
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·ipc           0.75          false  avgt         3.594          insns/clk
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf          0.75          false  avgt           NaN                ---
AsciiMapBench.asciiMapOptimizedLayoutSearchMap                 0.9           true  avgt    5   74.074 ± 6.450      ns/op
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·cpi            0.9           true  avgt         0.319          clks/insn
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·ipc            0.9           true  avgt         3.134          insns/clk
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf           0.9           true  avgt           NaN                ---
AsciiMapBench.asciiMapOptimizedLayoutSearchMap                 0.9          false  avgt    5  134.563 ± 6.884      ns/op
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·cpi            0.9          false  avgt         0.282          clks/insn
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·ipc            0.9          false  avgt         3.551          insns/clk
AsciiMapBench.asciiMapOptimizedLayoutSearchMap:·perf           0.9          false  avgt           NaN                ---
08:30:46 isaiahp@isaiahp-XPS seqlock4j ±|shm_map ✗|→